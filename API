== User API ==
Prefix: vs

vs.setSync()
vs.tableOfContents()
vs.gotoSlide(index)
vs.gotoNext()
vs.gotoPrevious()
vs.getSections()
vs.getCurrentSlide()
vs.getSections()
vs.module.loadScript()
vs.module.loadCSS()

vs.config.setCurrent(settings)
vs.config.setGlobal(settings)
vs.config.setForSlide(index, settings)
vs.config.setForClass(className, settings)

vs.getSlides()

=== Overlays ===
* frame based
* use the data-ani tag to describe the overlay
* different css styles
* allow javascript actions
* at first no support for animations
* default class .hide

=== Syntax ===
data-over-1="2-3 || hide superclass css(font-size: 12pt;) " data-over-2="1-2 | color:red"

The part before the colon is the inverse frame selector:

    <int>+<int>     not from <int> to <int>
    <int>-<int>     from <int> to <int>
    <int>           frame <int>
    <exp>,<exp>     list of selectors, operator is `or`
    -<int>          to <int>
    <int>-          from <int>

Special selectors:
    +-              the style is applied to all children
                    first child    data-over="1 || hide"
                    second child   data-over="2 || hide"
                    and so on
    pause           the style is applied to all previous elements


The part after the first pipe defines the style used, when the frame is active/selected.
The part after the second pipe defindes the style, when the frame is inactive.
If both pipes are missing, the default value is ` ## .hide `.
Classes and inline css can be mixed. In this case, the inline
css must be contained in ` css(<inline css>) `.
If only inline css is used, this is automatically detected.
Multiple class names are space separated.

It is possible to define multiple overlays for one element.
The attribute name is like
    data-over-<int>2

=== Javascript overlays ===
Function:
    vs.setOverlay(selector, callback)

=== Internal representation ===
The frame numbers are written into an array.
For each frame, actions are defined. The action parameters are the DOM elements,
the css classes and the inline styles.
Processing:
    1) Turn the content of the data-over tag into an object.
    2) Create a temporary table of frames and actions.
    3) Merge this table into the slide table

=== Animations ===
Animations are seldom useful in presentations and currently, there is no explicit support
for them.
However, the setOverlay function makes it possible to let objects fly around.
